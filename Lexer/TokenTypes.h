#pragma once
#include <vector>

enum TokenType
{
	ERROR,
	PLUS,
	MINUS,
	ASTERISK,
	FORWARD_SLASH,
	COLON,
	EQUALS,
	LESS,
	GREATER,
	LESS_EQUAL,
	GREATER_EQUAL,
	DOT,
	COMMA,
	OPEN_PARENTHESIS,
	CLOSE_PARENTHESIS,
	OPEN_SQUARE_BRACKET,
	CLOSE_SQUARE_BRACKET,
	OPEN_CURLY_BRACE,
	CLOSE_CURLY_BRACE,
	SEMICOLON,
	SINGLE_QUOTE,
	QUOTE,
	ASSIGMENT,
	INEQUALITY,
	SPACE,
	STRING,
	CHAR,
	ID,
	INTEGER,
	BOOLEAN,
	BYTE,
	WORD,
	SHORTINT,
	LONGINT,
	REAL,
	SINGLE,
	DOUBLE,
	EXTENDED,
	AND,
	ARRAY,
	BEGIN,
	CASE,
	CONST,
	DIV,
	DO,
	DOWNTO,
	ELSE,
	END,
	_FILE,
	FOR,
	FUNCTION,
	GOTO,
	IN,
	IF,
	LABEL,
	MOD,
	NIL,
	NOT,
	OF,
	OR,
	PACKED,
	PROCEDURE,
	PROGRAM,
	RECORD,
	REPEAT,
	SET,
	THEN,
	TO,
	TYPE,
	UNTIL,
	VAR,
	WHILE,
	WITH,
	READ,
	READLN,
	WRITE,
	WRITELN
};

const std::vector<std::string> tokenTypeString =
{
	"ERROR",
	"PLUS",
	"MINUS",
	"ASTERISK",
	"FORWARD_SLASH",
	"COLON",
	"EQUALS",
	"LESS",
	"GREATER",
	"LESS_EQUAL",
	"GREATER_EQUAL",
	"DOT",
	"COMMA",
	"OPEN_PARENTHESIS",
	"CLOSE_PARENTHESIS",
	"OPEN_SQUARE_BRACKET",
	"CLOSE_SQUARE_BRACKET",
	"OPEN_CURLY_BRACE",
	"CLOSE_CURLY_BRACE",
	"SEMICOLON",
	"SINGLE_QUOTE",
	"QUOTE",
	"ASSIGMENT",
	"INEQUALITY",
	"SPACE",
	"STRING",
	"CHAR",
	"ID",
	"INTEGER",
	"BOOLEAN",
	"BYTE",
	"WORD",
	"SHORTINT",
	"LONGINT",
	"REAL",
	"SINGLE",
	"DOUBLE",
	"EXTENDED",
	"AND",
	"ARRAY",
	"BEGIN",
	"CASE",
	"CONST",
	"DIV",
	"DO",
	"DOWNTO",
	"ELSE",
	"END",
	"FILE",
	"FOR",
	"FUNCTION",
	"GOTO",
	"IN",
	"IF",
	"LABEL",
	"MOD",
	"NIL",
	"NOT",
	"OF",
	"OR",
	"PACKED",
	"PROCEDURE",
	"PROGRAM",
	"RECORD",
	"REPEAT",
	"SET",
	"THEN",
	"TO",
	"TYPE",
	"UNTIL",
	"VAR",
	"WHILE",
	"WITH",
	"READ",
	"READLN",
	"WRITE",
	"WRITELN"
};